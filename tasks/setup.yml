---

- name: Create encrypted keyfile
  shell: head -c66 {{ secret_random }} | base64 -w0 | gpg --symmetric --cipher-algo aes --armor > {{ secret }}/{{ secret_keyfile }} creates={{ secret }}/{{ secret_keyfile }}
  when: secret_gpg is undefined or secret_gpg is defined and secret_gpg == False
  tags: secret

- name: Create GPG-encrypted keyfile
  shell: head -c66 {{ secret_random }} | base64 -w0 | gpg --encrypt --armor -r {{ secret_gpg | join( ' -r ') }} > {{ secret }}/{{ secret_keyfile }} creates={{ secret }}/{{ secret_keyfile }}
  when: secret_gpg is defined and secret_gpg
  tags: secret

- name: Create storage space
  command: dd if={{ secret_random }} of={{ secret }}/{{ secret_storage }} bs=1M count={{ secret_size }} creates={{ secret }}/{{ secret_storage }}
  register: secret_storage_created
  tags: secret

- name: Encrypt storage space
  shell: gpg --decrypt {{ secret }}/{{ secret_keyfile }} | sudo cryptsetup luksFormat {{ secret }}/{{ secret_storage }} executable={{ lookup('env', 'SHELL') }}
  when: secret_storage_created is defined and secret_storage_created.changed == True
  tags: secret

- name: Open storage space for formatting
  shell: gpg --decrypt {{ secret }}/{{ secret_keyfile }} | sudo cryptsetup luksOpen {{ secret }}/{{ secret_storage }} {{ secret_device }} executable={{ lookup('env', 'SHELL') }} creates=/dev/mapper/{{ secret_device }}
  when: secret_storage_created is defined and secret_storage_created.changed == True
  changed_when: False
  tags: secret

- name: Format storage device
  shell: sudo mkfs.ext2 /dev/mapper/{{ secret_device }}
  when: secret_storage_created is defined and secret_storage_created.changed == True
  tags: secret

- name: Close storage device
  shell: sudo cryptsetup luksClose {{ secret_device }} removes=/dev/mapper/{{ secret_device }}
  changed_when: False
  tags: secret

